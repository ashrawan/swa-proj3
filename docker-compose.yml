version: '3.9'

services:

  # =============== MySQL =================
  #  swa3-mysqldb:
  #    container_name: swa3-mysqldb-container
  #    image: ashrawan/mysql:latest
  #    ports:
  #      - 3307:3307
  #    environment:
  #      MYSQL_ROOT_PASSWORD: root
  #    healthcheck:
  #      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
  #      timeout: 50s
  #      retries: 3
  #    restart: on-failure
  #    volumes:
  #      - swa2_mysqldb:/var/lib/mysql

  # Add as Required: =============== MongoDB, Cassandra, ElasticSearch =================
  # swa3-mongodb
  # swa3-cassandradb
  # swa3-elasticdb


  # =============== Services =================
  auth-service:
    container_name: proj3_auth-container
    image: ashrawan/proj3_auth-service
    ports:
      - 8070:8070
    restart: always
    build:
      context: ./auth-service
      dockerfile: Dockerfile
  #    environment:
  #      MYSQL_URL: swa3-mysqldb
  #      MYSQL_PORT: 3307
  #    depends_on:
  #      swa2-mysql:
  #        condition: service_healthy

  search-service:
    container_name: proj3_search-container
    image: ashrawan/proj3_search-service
    ports:
      - 8081:8081
    restart: always
    build:
      context: ./search-service-elastic
      dockerfile: Dockerfile
  #    environment:
  #      MYSQL_URL: swa2-mysqldb
  #      MYSQL_PORT: 3307
  #    depends_on:
  #      swa2-mysql:
  #        condition: service_healthy

  candidate-service:
    container_name: proj3_candidate-container
    image: ashrawan/proj3_candidate-service
    ports:
      - 8082:8082
    restart: always
    build:
      context: ./candidate-service
      dockerfile: Dockerfile
  #    environment:
  #      MYSQL_URL: swa2-mysqldb
  #      MYSQL_PORT: 3307
  #    depends_on:
  #      swa2-mysql:
  #        condition: service_healthy

  job-service:
    container_name: proj3_job-container
    image: ashrawan/proj3_job-service
    ports:
      - 8083:8083
    restart: always
    build:
      context: ./job-service
      dockerfile: Dockerfile
  #    environment:
  #      MYSQL_URL: swa2-mysqldb
  #      MYSQL_PORT: 3307
  #    depends_on:
  #      swa2-mysql:
  #        condition: service_healthy


  recruiter-service:
    container_name: proj3_recruiter-container
    image: ashrawan/proj3_recruiter-service
    ports:
      - 8084:8084
    restart: always
    build:
      context: ./recruiter-service
      dockerfile: Dockerfile
  #    environment:
  #      MYSQL_URL: swa2-mysqldb
  #      MYSQL_PORT: 3307
  #    depends_on:
  #      swa2-mysql:
  #        condition: service_healthy

  notification-service:
    container_name: proj3_notification-container
    image: ashrawan/proj3_notification-service
    ports:
      - 8087:8087
    restart: always
    build:
      context: ./notification-service
      dockerfile: Dockerfile
  #    environment:
  #      MYSQL_URL: swa2-mysqldb
  #      MYSQL_PORT: 3307
  #    depends_on:
  #      swa2-mysql:
  #        condition: service_healthy


  #volumes:
  #  swa2_mysqldb:
#
#
  application-service:
    container_name: proj3_application-container
    image: ashrawan/proj3_application-service
    ports:
      - 8085:8085
    restart: always
    build:
      context: ./application-service
      dockerfile: Dockerfile
#    environment:
#      SPRING_DATASOURCE_URL: mongodb://localhost:27017/application-db
#      SPRING_DATASOURCE_USER: root
#      SPRING_DATASOURCE_PASSWORD: root
#      MONGODB_PORT: 27017
#    depends_on:
#      - monodb-service
#
#  monodb-service:
#    image: ashrawan/mongo
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=root
#      - MONGO_INITDB_ROOT_PASSWORD=root
#


